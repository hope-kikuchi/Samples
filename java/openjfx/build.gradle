buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.gradle:osdetector-gradle-plugin:1.6.0"
    }
}

apply plugin: "application"
apply plugin: "com.google.osdetector"

ext {
    if (osdetector.os == "osx") {
        platform = "mac"
    } else if (osdetector.os == "windows") {
        platform = "win"
    } else {
        platform = osdetector.os
    }

    moduleName = "sample"
}

sourceCompatibility = 11
targetCompatibility = 11

compileJava.options.encoding = "UTF-8"

mainClassName = "${moduleName}/sample.openjfx.HelloOpenJFX"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.openjfx:javafx-base:11:$platform"
    compile "org.openjfx:javafx-controls:11:$platform"
    compile "org.openjfx:javafx-graphics:11:$platform"
    compile "org.openjfx:javafx-fxml:11:$platform"
    compile "org.openjfx:javafx-media:11:$platform"
    compile "org.openjfx:javafx-swing:11:$platform"
    compile "org.openjfx:javafx-web:11:$platform"
}

compileJava {
    doFirst {
        options.compilerArgs = [
            "--module-path", classpath.asPath
        ]
        
        classpath = files()
    }
}

run {
    doFirst {
        jvmArgs = [
            "--module-path", classpath.asPath,
            "--module", mainClassName
        ]
        
        classpath = files()
    }
}

task jlink(type: Exec, dependsOn: jar) {
    // commandLine = ["cmd", "/c", "echo", "hello"]
    // /*
    commandLine = [
        "cmd", "/c", "jlink",
        "--launcher", "hello-openjfx=${mainClassName}",
        "-p", /${jar.archivePath};%JAVA_HOME%\jmods;${configurations.compile.files.join(";")}/,
        "--add-modules", moduleName,
        "--output", "${buildDir}/jlink"
    ]
    //*/
}