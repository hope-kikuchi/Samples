buildscript {
    ext {
        kotlinVersion = '1.0.2'
    }

    repositories {
        mavenCentral()
    }
 
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'kotlin'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
    projectName = 'kotlin-javaee'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.flywaydb:flyway-core:3.2.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.4'
    providedCompile 'fish.payara.extras:payara-micro:4.1.1.161.1'
    testCompile 'junit:junit:4.12', {transitive = false}
    testCompile 'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'org.jmockit:jmockit:1.21'
}

war {
    baseName = projectName
}

eclipse {
    project {
        name = projectName
        buildCommand 'org.jetbrains.kotlin.ui.kotlinBuilder'
        natures 'org.jetbrains.kotlin.core.kotlinNature'
        linkedResource(
            name: 'kotlin_bin',
            type: '2',
            locationUri: "org.jetbrains.kotlin.core.filesystem:/${name}/kotlin_bin"
        )
    }
    classpath.containers 'org.jetbrains.kotlin.core.KOTLIN_CONTAINER'
}

task payara(type: Exec, dependsOn: war) {
    def payaraJar = configurations
                        .providedCompile
                        .find {it.name =~ /payara-micro.*\.jar/}
                        .absolutePath
    def warFile = war.archivePath

    commandLine(
        'java',
        '-Xdebug',
        '-Xrunjdwp:transport=dt_socket,server=y,address=18000,suspend=n',
        '-jar', payaraJar, '--deploy', warFile
        )
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
